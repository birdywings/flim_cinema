# Generated by Django 2.0.2 on 2019-03-24 09:14

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=64, unique=True, verbose_name='username')),
                ('email', models.EmailField(default='', max_length=64, verbose_name='email')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
                ('cover', models.ImageField(blank=True, upload_to='images')),
                ('film_file', models.FileField(blank=True, default='', upload_to='film')),
                ('score', models.CharField(blank=True, max_length=64, verbose_name='score')),
                ('released', models.CharField(blank=True, max_length=64, verbose_name='released')),
                ('introduction', models.TextField(blank=True, default='', verbose_name='introduction')),
            ],
        ),
        migrations.CreateModel(
            name='IndexLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
                ('index_label', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='film_sys.IndexLabel', verbose_name='index_label')),
            ],
        ),
        migrations.AddField(
            model_name='film',
            name='label',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='film', to='film_sys.Label', verbose_name='label'),
        ),
    ]
